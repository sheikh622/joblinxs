{"ast":null,"code":"var _jsxFileName = \"D:\\\\servic_app_tanza_frontend\\\\src\\\\pages\\\\components\\\\Forms.js\";\nimport React from \"react\";\nimport moment from \"moment-timezone\";\nimport Datetime from \"react-datetime\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faCalendarAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Col, Row, Card, Form, Container, InputGroup } from \"@themesberg/react-bootstrap\";\nimport Documentation from \"../../components/Documentation\";\nexport default (() => {\n  return /*#__PURE__*/React.createElement(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    className: \"px-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex flex-wrap flex-md-nowrap align-items-center py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"d-block mb-4 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"Forms\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"Use form elements such as text inputs, textareas, file uploads and many more to get input from you users.\"))), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Example\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, \"Form elements are an important part of the UI to receive text input from the users. The \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 41\n      }\n    }, \"<Form>\"), \" component can be used to create forms, form groups, labels, and input elements inside the UI. Check out the following example for a simple email input field and a textarea field:\"),\n    scope: {\n      Form\n    },\n    imports: `import { Form } from '@themesberg/react-bootstrap';`,\n    example: `<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"name@example.com\" />\n  </Form.Group>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Example textarea</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"3\" />\n  </Form.Group>\n</Form>`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Input fields with icon\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, \"You can also add icons to the left or right side of the input field by using the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 34\n      }\n    }, \"<InputGroup>\"), \" component and using the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }, \"<InputGroup.Text>\"), \" element with an icon element inside it, either after or before the\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, \"<Form.Control>\"), \" element.\"),\n    scope: {\n      Form,\n      InputGroup,\n      FontAwesomeIcon,\n      faSearch\n    },\n    imports: `import { Form, InputGroup } from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";`,\n    example: `<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Icon Left</Form.Label>\n    <InputGroup>\n      <InputGroup.Text><FontAwesomeIcon icon={faSearch} /></InputGroup.Text>\n      <Form.Control type=\"text\" placeholder=\"Search\" />\n    </InputGroup>\n  </Form.Group>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Icon Right</Form.Label>\n    <InputGroup>\n      <Form.Control type=\"text\" placeholder=\"Search\" />\n      <InputGroup.Text><FontAwesomeIcon icon={faSearch} /></InputGroup.Text>\n    </InputGroup>\n  </Form.Group>\n</Form>`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Validation\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"You can easily update the styles of a valid or invalid styles input field by using the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 40\n      }\n    }, \"isValid\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }, \"isInvalid\"), \" attributes. Additionally, you can use the\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, \"<Form.Control.Feedback>\"), \" component to write the message regarding the success or error message.\"),\n    scope: {\n      Form\n    },\n    imports: `import { Form } from '@themesberg/react-bootstrap';`,\n    example: `<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Username</Form.Label>\n    <Form.Control required isInvalid type=\"text\" />\n    <Form.Control.Feedback type=\"invalid\">Please choose a username.</Form.Control.Feedback>\n  </Form.Group>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>First name</Form.Label>\n    <Form.Control required isValid type=\"text\" defaultValue=\"Mark\" />\n    <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\n  </Form.Group>\n</Form>`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Select input\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, \"The \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }, \"<Form.Select>\"), \" component can be used for option selection from the user. You can use the\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, \"<option>\"), \" elements to add multiple options and use the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 27\n      }\n    }, \"defaultValue\"), \" attribute to set the default value of the select field.\"),\n    scope: {\n      Form\n    },\n    imports: `import { Form } from '@themesberg/react-bootstrap';`,\n    example: `<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Example select</Form.Label>\n    <Form.Select>\n      <option defaultValue>Open this select menu</option>\n      <option>One</option>\n      <option>Two</option>\n      <option>Three</option>\n    </Form.Select>\n  </Form.Group>\n</Form>`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Multiple select\",\n    description: \"\",\n    scope: {\n      Form\n    },\n    imports: `import { Form } from '@themesberg/react-bootstrap';`,\n    example: `<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Example multiple select</Form.Label>\n    <Form.Select multiple>\n      <option defaultValue>Open this select menu</option>\n      <option>One</option>\n      <option>Two</option>\n      <option>Three</option>\n    </Form.Select>\n  </Form.Group>\n</Form>`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Textarea\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, \"You can create a textarea input field by adding the\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, \"as=\\\"textarea\\\"\"), \" modifier attribute to the\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }, \"<Form.Control>\"), \" component.\"),\n    scope: {\n      Form\n    },\n    imports: `import { Form } from '@themesberg/react-bootstrap';`,\n    example: `<Form>\n  <Form.Group>\n    <Form.Label>Example textarea</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"4\" placeholder=\"Enter your message...\" />\n  </Form.Group>\n</Form>`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"File upload\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, \"If you want to use an input field to upload files, you need to add the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 19\n      }\n    }, \"type=\\\"file\\\"\"), \" attribute to the\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, \"<Form.Control>\"), \" component.\"),\n    scope: {\n      Form\n    },\n    imports: `import { Form } from '@themesberg/react-bootstrap';`,\n    example: `<Form>\n  <Form.Control type=\"file\" />\n</Form>`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Checkboxes\",\n    description: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 15\n      }\n    }, \"Use the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }\n    }, \"<Form.Check>\"), \" component to create checkbox items. If you want to disable on them, you need to add the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }\n    }, \"disabled\"), \" attribute.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }\n    }, \"Make sure the is a \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 36\n      }\n    }, 'id=\"*\"'), \" and\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, 'htmlFor=\"*\"'), \" attribute for each element so that clicking on the text will also toggle the element.\")),\n    scope: {\n      Form\n    },\n    imports: `import { Form } from '@themesberg/react-bootstrap';`,\n    example: `<Form>\n  <Form.Check label=\"Default checkbox\" id=\"checkbox1\" htmlFor=\"checkbox1\" />\n  <Form.Check disabled label=\"Disabled checkbox\" id=\"checkbox2\" htmlFor=\"checkbox2\" />\n</Form>`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Radio buttons\",\n    description: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 15\n      }\n    }, \"If you want to use radio buttons, you need to use the\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    }, \"<Form.Check>\"), \" component with the\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    }, \"type=\\\"radio\\\"\"), \" modifier. You can disable the element by using the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 30\n      }\n    }, \"disabled\"), \" attribute.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 15\n      }\n    }, \"Make sure the is a \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 36\n      }\n    }, 'id=\"*\"'), \" and\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }\n    }, 'htmlFor=\"*\"'), \" attribute for each element so that clicking on the text will also toggle the element.\")),\n    scope: {\n      Form\n    },\n    imports: `import { Form } from '@themesberg/react-bootstrap';`,\n    example: `<Form>\n  <fieldset>\n    <Form.Check\n      defaultChecked\n      type=\"radio\"\n      defaultValue=\"option1\"\n      label=\"Default radio\"\n      name=\"exampleRadios\"\n      id=\"radio1\"\n      htmlFor=\"radio1\"\n      />\n\n    <Form.Check\n      type=\"radio\"\n      defaultValue=\"option2\"\n      label=\"Second default radio\"\n      name=\"exampleRadios\"\n      id=\"radio2\"\n      htmlFor=\"radio2\"\n      />\n\n    <Form.Check\n      disabled\n      type=\"radio\"\n      defaultValue=\"option3\"\n      label=\"Disabled radio\"\n      name=\"exampleRadios\"\n      id=\"radio3\"\n      htmlFor=\"radio3\"\n      />\n  </fieldset>\n</Form>`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Datepicker\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }\n    }, \"Use the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 23\n      }\n    }, \"<Datetime>\"), \" component to use a datepicker as an input field. You can read more about the options that you can use for this component by reading the\", \" \", /*#__PURE__*/React.createElement(Card.Link, {\n      href: \"https://www.npmjs.com/package/react-datetime\",\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 15\n      }\n    }, \"react-datetime\"), \" \", \"documentation.\"),\n    scope: {\n      Datetime,\n      Form,\n      InputGroup,\n      FontAwesomeIcon,\n      faCalendarAlt,\n      moment\n    },\n    imports: `import React, { useState } from \"react\";\nimport { Form, InputGroup } from '@themesberg/react-bootstrap';\nimport Datetime from \"react-datetime\";\nimport moment from \"moment-timezone\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarAlt } from \"@fortawesome/free-solid-svg-icons\";`,\n    example: `const Datepicker = () => {\n  const [birthday, setBirthday] = React.useState(\"\");\n\n  return(\n    <Form>\n      <Form.Group className=\"mb-3\">\n        <Datetime\n          timeFormat={false}\n          closeOnSelect={false}\n          onChange={setBirthday}\n          renderInput={(props, openCalendar) => (\n            <InputGroup>\n              <InputGroup.Text><FontAwesomeIcon icon={faCalendarAlt} /></InputGroup.Text>\n              <Form.Control\n                required\n                type=\"text\"\n                value={birthday ? moment(birthday).format(\"MM/DD/YYYY\") : \"\"}\n                placeholder=\"mm/dd/yyyy\"\n                onFocus={openCalendar}\n                onChange={() => { }} />\n            </InputGroup>\n          )} />\n      </Form.Group>\n    </Form>\n  );\n}\n\nrender( <Datepicker /> )`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  })));\n});","map":{"version":3,"names":["React","moment","Datetime","FontAwesomeIcon","faSearch","faCalendarAlt","Col","Row","Card","Form","Container","InputGroup","Documentation"],"sources":["D:/servic_app_tanza_frontend/src/pages/components/Forms.js"],"sourcesContent":["import React from \"react\";\nimport moment from \"moment-timezone\";\nimport Datetime from \"react-datetime\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch, faCalendarAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  Col,\n  Row,\n  Card,\n  Form,\n  Container,\n  InputGroup,\n} from \"@themesberg/react-bootstrap\";\n\nimport Documentation from \"../../components/Documentation\";\n\nexport default () => {\n  return (\n    <article>\n      <Container className=\"px-0\">\n        <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\n          <Col className=\"d-block mb-4 mb-md-0\">\n            <h1 className=\"h2\">Forms</h1>\n            <p className=\"mb-0\">\n              Use form elements such as text inputs, textareas, file uploads and\n              many more to get input from you users.\n            </p>\n          </Col>\n        </Row>\n\n        <Documentation\n          title=\"Example\"\n          description={\n            <p>\n              Form elements are an important part of the UI to receive text\n              input from the users. The <code>&#x3C;Form&#x3E;</code> component\n              can be used to create forms, form groups, labels, and input\n              elements inside the UI. Check out the following example for a\n              simple email input field and a textarea field:\n            </p>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\n          example={`<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"name@example.com\" />\n  </Form.Group>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Example textarea</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"3\" />\n  </Form.Group>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Input fields with icon\"\n          description={\n            <p>\n              You can also add icons to the left or right side of the input\n              field by using the <code>&#x3C;InputGroup&#x3E;</code> component\n              and using the <code>&#x3C;InputGroup.Text&#x3E;</code> element\n              with an icon element inside it, either after or before the{\" \"}\n              <code>&#x3C;Form.Control&#x3E;</code> element.\n            </p>\n          }\n          scope={{ Form, InputGroup, FontAwesomeIcon, faSearch }}\n          imports={`import { Form, InputGroup } from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";`}\n          example={`<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Icon Left</Form.Label>\n    <InputGroup>\n      <InputGroup.Text><FontAwesomeIcon icon={faSearch} /></InputGroup.Text>\n      <Form.Control type=\"text\" placeholder=\"Search\" />\n    </InputGroup>\n  </Form.Group>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Icon Right</Form.Label>\n    <InputGroup>\n      <Form.Control type=\"text\" placeholder=\"Search\" />\n      <InputGroup.Text><FontAwesomeIcon icon={faSearch} /></InputGroup.Text>\n    </InputGroup>\n  </Form.Group>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Validation\"\n          description={\n            <p>\n              You can easily update the styles of a valid or invalid styles\n              input field by using the <code>isValid</code> or{\" \"}\n              <code>isInvalid</code> attributes. Additionally, you can use the{\" \"}\n              <code>&#x3C;Form.Control.Feedback&#x3E;</code> component to write\n              the message regarding the success or error message.\n            </p>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\n          example={`<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Username</Form.Label>\n    <Form.Control required isInvalid type=\"text\" />\n    <Form.Control.Feedback type=\"invalid\">Please choose a username.</Form.Control.Feedback>\n  </Form.Group>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>First name</Form.Label>\n    <Form.Control required isValid type=\"text\" defaultValue=\"Mark\" />\n    <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\n  </Form.Group>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Select input\"\n          description={\n            <p>\n              The <code>&#x3C;Form.Select&#x3E;</code> component can be used for\n              option selection from the user. You can use the{\" \"}\n              <code>&#x3C;option&#x3E;</code> elements to add multiple options\n              and use the <code>defaultValue</code> attribute to set the default\n              value of the select field.\n            </p>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\n          example={`<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Example select</Form.Label>\n    <Form.Select>\n      <option defaultValue>Open this select menu</option>\n      <option>One</option>\n      <option>Two</option>\n      <option>Three</option>\n    </Form.Select>\n  </Form.Group>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Multiple select\"\n          description=\"\"\n          scope={{ Form }}\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\n          example={`<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Example multiple select</Form.Label>\n    <Form.Select multiple>\n      <option defaultValue>Open this select menu</option>\n      <option>One</option>\n      <option>Two</option>\n      <option>Three</option>\n    </Form.Select>\n  </Form.Group>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Textarea\"\n          description={\n            <p>\n              You can create a textarea input field by adding the{\" \"}\n              <code>as=\"textarea\"</code> modifier attribute to the{\" \"}\n              <code>&#x3C;Form.Control&#x3E;</code> component.\n            </p>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\n          example={`<Form>\n  <Form.Group>\n    <Form.Label>Example textarea</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"4\" placeholder=\"Enter your message...\" />\n  </Form.Group>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"File upload\"\n          description={\n            <p>\n              If you want to use an input field to upload files, you need to add\n              the <code>type=\"file\"</code> attribute to the{\" \"}\n              <code>&#x3C;Form.Control&#x3E;</code> component.\n            </p>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\n          example={`<Form>\n  <Form.Control type=\"file\" />\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Checkboxes\"\n          description={\n            <>\n              <p>\n                Use the <code>&#x3C;Form.Check&#x3E;</code> component to create\n                checkbox items. If you want to disable on them, you need to add\n                the <code>disabled</code> attribute.\n              </p>\n              <p>\n                Make sure the is a <code>{'id=\"*\"'}</code> and{\" \"}\n                <code>{'htmlFor=\"*\"'}</code> attribute for each element so that\n                clicking on the text will also toggle the element.\n              </p>\n            </>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\n          example={`<Form>\n  <Form.Check label=\"Default checkbox\" id=\"checkbox1\" htmlFor=\"checkbox1\" />\n  <Form.Check disabled label=\"Disabled checkbox\" id=\"checkbox2\" htmlFor=\"checkbox2\" />\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Radio buttons\"\n          description={\n            <>\n              <p>\n                If you want to use radio buttons, you need to use the{\" \"}\n                <code>&#x3C;Form.Check&#x3E;</code> component with the{\" \"}\n                <code>type=\"radio\"</code> modifier. You can disable the element\n                by using the <code>disabled</code> attribute.\n              </p>\n              <p>\n                Make sure the is a <code>{'id=\"*\"'}</code> and{\" \"}\n                <code>{'htmlFor=\"*\"'}</code> attribute for each element so that\n                clicking on the text will also toggle the element.\n              </p>\n            </>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\n          example={`<Form>\n  <fieldset>\n    <Form.Check\n      defaultChecked\n      type=\"radio\"\n      defaultValue=\"option1\"\n      label=\"Default radio\"\n      name=\"exampleRadios\"\n      id=\"radio1\"\n      htmlFor=\"radio1\"\n      />\n\n    <Form.Check\n      type=\"radio\"\n      defaultValue=\"option2\"\n      label=\"Second default radio\"\n      name=\"exampleRadios\"\n      id=\"radio2\"\n      htmlFor=\"radio2\"\n      />\n\n    <Form.Check\n      disabled\n      type=\"radio\"\n      defaultValue=\"option3\"\n      label=\"Disabled radio\"\n      name=\"exampleRadios\"\n      id=\"radio3\"\n      htmlFor=\"radio3\"\n      />\n  </fieldset>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Datepicker\"\n          description={\n            <p>\n              Use the <code>&#x3C;Datetime&#x3E;</code> component to use a\n              datepicker as an input field. You can read more about the options\n              that you can use for this component by reading the{\" \"}\n              <Card.Link\n                href=\"https://www.npmjs.com/package/react-datetime\"\n                target=\"_blank\"\n              >\n                react-datetime\n              </Card.Link>{\" \"}\n              documentation.\n            </p>\n          }\n          scope={{\n            Datetime,\n            Form,\n            InputGroup,\n            FontAwesomeIcon,\n            faCalendarAlt,\n            moment,\n          }}\n          imports={`import React, { useState } from \"react\";\nimport { Form, InputGroup } from '@themesberg/react-bootstrap';\nimport Datetime from \"react-datetime\";\nimport moment from \"moment-timezone\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarAlt } from \"@fortawesome/free-solid-svg-icons\";`}\n          example={`const Datepicker = () => {\n  const [birthday, setBirthday] = React.useState(\"\");\n\n  return(\n    <Form>\n      <Form.Group className=\"mb-3\">\n        <Datetime\n          timeFormat={false}\n          closeOnSelect={false}\n          onChange={setBirthday}\n          renderInput={(props, openCalendar) => (\n            <InputGroup>\n              <InputGroup.Text><FontAwesomeIcon icon={faCalendarAlt} /></InputGroup.Text>\n              <Form.Control\n                required\n                type=\"text\"\n                value={birthday ? moment(birthday).format(\"MM/DD/YYYY\") : \"\"}\n                placeholder=\"mm/dd/yyyy\"\n                onFocus={openCalendar}\n                onChange={() => { }} />\n            </InputGroup>\n          )} />\n      </Form.Group>\n    </Form>\n  );\n}\n\nrender( <Datepicker /> )`}\n        />\n      </Container>\n    </article>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}