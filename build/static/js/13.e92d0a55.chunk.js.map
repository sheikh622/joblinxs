{"version":3,"sources":["pages/JobManagement/LeaderBoardTable/TableHeading.tsx","pages/JobManagement/LeaderBoardTable/TableItem.tsx","pages/JobManagement/LeaderBoardTable/index.tsx","pages/JobManagement/Modal/tableItem.tsx","pages/JobManagement/Modal/requestModal.tsx","pages/JobManagement/index.tsx","pages/Categories/Modals/Modal.tsx"],"names":["TableHeading","TableRow","sx","fontSize","padding","backgroundColor","fontWeight","Fonts","BOLD","pl","pr","TableCell","align","className","IntlMessages","id","label","inputProps","TableItem","row","dispatch","useDispatch","useState","status","blockUser","setBlockUser","open","setOpen","whiteSpace","firstName","lastName","Switch","checked","onChange","e","getUserBlock","userId","Tooltip","title","IconButton","htmlColor","onClick","Modal","show","onHide","PlayerTable","userTableData","page","useSelector","state","User","UserActivePage","React","search","rowsPerPage","setRowsPerPage","useIntl","messages","TableContainer","Grid","item","xs","style","TableHead","TableBody","users","map","TableFooter","TablePagination","rowsPerPageOptions","colSpan","count","totalUsers","borderBottom","marginBottom","paddingBottom","SelectProps","native","onPageChange","event","newPage","changeUsersActivePage","getUsersList","limit","onRowsPerPageChange","parseInt","target","value","Table","bgcolor","BasicModal","UserName","onDelete","Service","Action","onClose","mt","marginLeft","p","lg","sm","mb","ml","Box","component","color","display","Card","width","paddingTop","Button","variant","userList","setSearch","request","setRequest","useEffect","undefined","adminId","AppAnimate","animation","delay","flexDirection","alignItems","position","right","top","md","AppCard","contentStyle","px","TextField","placeholder","Autocomplete","disablePortal","options","renderInput","params","Users","length","children","Header","size","scrollable","left","transform","border","borderRadius","boxShadow"],"mappings":"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","file":"static/js/13.e92d0a55.chunk.js","sourcesContent":["import React from \"react\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport IntlMessages from \"@crema/utility/IntlMessages\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { Fonts } from \"../../../shared/constants/AppEnums\";\r\nimport Switch from '@mui/material/Switch';\r\nconst label = { inputProps: { 'aria-label': 'Switch demo' } };\r\nconst TableHeading = () => {\r\n  return (\r\n    <TableRow\r\n      sx={{\r\n        \"& th\": {\r\n          fontSize: 13,\r\n          padding: 2,\r\n          backgroundColor: \"white\",\r\n          fontWeight: Fonts.BOLD,\r\n          \"&:first-of-type\": {\r\n            pl: 5,\r\n          },\r\n          \"&:last-of-type\": {\r\n            pr: 5,\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <TableCell align=\"center\" className=\"tableCell\">\r\n        <IntlMessages id=\"job.table.UserName\" />\r\n      </TableCell>\r\n      <TableCell align=\"center\" className=\"tableCell\">\r\n        <IntlMessages id=\"job.table.JobCategory\" />\r\n      </TableCell>\r\n\r\n      <TableCell align=\"center\" className=\"tableCell\">\r\n        <IntlMessages id=\"job.table.JobStatus\" />\r\n      </TableCell>\r\n      <TableCell align=\"center\" className=\"tableCell\">\r\n        <IntlMessages id=\"job.table.Action\" />\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\nexport default TableHeading;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { PlayerTableData } from \"types/models/PlayerTable\";\r\nimport Switch from '@mui/material/Switch';\r\nimport RemoveRedEyeIcon from '@mui/icons-material/RemoveRedEye';\r\nimport { getUserBlock } from \"../../../redux/userManagement/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Profile from \"../Modal/Profile\"\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Modal from \"../../Categories/Modals/Modal\"\r\ninterface TableItemProps {\r\n  row: PlayerTableData;\r\n}\r\nconst label = { inputProps: { 'aria-label': 'Switch demo' } };\r\nconst TableItem: React.FC<TableItemProps> = ({ row }) => {\r\n  const dispatch = useDispatch();\r\n  const [blockUser, setBlockUser] = useState(row.status === \"active\" ? true : false);\r\n  // const [show, setShow] = useState(false);\r\n  const [open, setOpen] = useState (false);\r\n  // const handleClick = () => setOpen(false);\r\n  const handleClose = () => setOpen(false);\r\n  return (\r\n    <>\r\n      <TableRow\r\n        sx={{\r\n          \"& .tableCell\": {\r\n            fontSize: 13,\r\n            padding: 2,\r\n            whiteSpace: \"nowrap\",\r\n            \"&:first-of-type\": {\r\n              pl: 5,\r\n            },\r\n            \"&:last-of-type\": {\r\n              pr: 5,\r\n            },\r\n          },\r\n        }}\r\n        className=\"item-hover\"\r\n      >\r\n        <TableCell align=\"center\" className=\"tableCell\">\r\n          {row.firstName ? row.firstName : \"Sunny\"}\r\n        </TableCell>\r\n        <TableCell align=\"center\" className=\"tableCell\">\r\n          {row.lastName ? row.lastName : \"Sunny\"}\r\n        </TableCell>\r\n        <TableCell align=\"center\" className=\"tableCell\">\r\n          <Switch\r\n            {...label}\r\n            checked={blockUser}\r\n            onChange={(e) => { setBlockUser(!blockUser); dispatch(getUserBlock({ userId: row.id, })) }}\r\n          />\r\n        </TableCell>\r\n        <TableCell align=\"center\" className=\"tableCell\">        \r\n          <Tooltip title=\"Delete\">\r\n            <IconButton>\r\n              <DeleteIcon\r\n                htmlColor=\"#dc3545\"\r\n                onClick={() => setOpen(true)}\r\n              ></DeleteIcon> \r\n            </IconButton>\r\n          </Tooltip>\r\n        </TableCell>\r\n      </TableRow>\r\n      <Modal show={open} onHide={handleClose}/>\r\n    </>\r\n  );\r\n};\r\nexport default TableItem;\r\n","import React,{useEffect} from \"react\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableHeading from \"./TableHeading\";\r\nimport TableItem from \"./TableItem\";\r\nimport AppTableContainer from \"@crema/core/AppTableContainer\";\r\nimport { PlayerTableData } from \"types/models/PlayerTable\";\r\nimport TableFooter from \"@mui/material/TableFooter\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport FirstPageIcon from \"@mui/icons-material/FirstPage\";\r\nimport KeyboardArrowLeft from \"@mui/icons-material/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@mui/icons-material/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@mui/icons-material/LastPage\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { useIntl } from \"react-intl\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Grid, TextField } from \"@mui/material\";\r\nimport {\r\n  getUsersList,\r\n  changeUsersActivePage,\r\n} from \"../../../redux/userManagement/actions\";\r\ninterface PlayerTableProps {\r\n  userTableData: any;\r\n}\r\ninterface TablePaginationActionsProps {\r\n  count: number;\r\n  page: number;\r\n  rowsPerPage: number;\r\n  onPageChange: (\r\n    event: React.MouseEvent<HTMLButtonElement>,\r\n    newPage: number\r\n  ) => void;\r\n}\r\nfunction TablePaginationActions(props: TablePaginationActionsProps) {\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onPageChange } = props;\r\n  const handleFirstPageButtonClick = (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    onPageChange(event, 0);\r\n  };\r\n  const handleBackButtonClick = (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    onPageChange(event, page - 1);\r\n  };\r\n  const handleNextButtonClick = (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    onPageChange(event, page + 1);\r\n  };\r\n  const handleLastPageButtonClick = (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n  return (\r\n    <Box sx={{ flexShrink: 0, ml: 2.5 }}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n}\r\nconst PlayerTable: React.FC<PlayerTableProps> = ({\r\n  userTableData,\r\n}) => {\r\n  const page = useSelector((state: any) => state.User.UserActivePage);\r\n  const dispatch = useDispatch();\r\n \r\n  const [search, setSearch] = React.useState(\"\");\r\n\r\n\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const handleChangePage = (\r\n    event: React.MouseEvent<HTMLButtonElement> | null,\r\n    newPage: number\r\n  ) => {\r\n    dispatch(changeUsersActivePage(newPage));\r\n    dispatch(\r\n      getUsersList({\r\n        page: newPage+1,limit:5,\r\n        search:search,\r\n      })\r\n    )\r\n  };\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    dispatch(\r\n      getUsersList({\r\n        page: 1,limit:parseInt(event.target.value, 10), search:search,\r\n      })\r\n    )\r\n    dispatch(changeUsersActivePage(0));\r\n  };\r\n  const { messages } = useIntl();\r\n  return (\r\n    <TableContainer>\r\n      <Grid item xs={12} style={{ padding: 20 }}>   \r\n      </Grid>  \r\n      <Table>\r\n        <TableHead>\r\n          <TableHeading />\r\n        </TableHead>\r\n        <TableBody>\r\n          {userTableData?.users?.map((row: any) => (\r\n            <TableItem key={row.id} row={row} />\r\n          ))}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, 50]}\r\n              colSpan={7}\r\n              count={userTableData?.totalUsers}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              sx={{\r\n                borderBottom: \"0 none\",\r\n                marginBottom: 0,\r\n                paddingBottom: 0,\r\n              }}\r\n              SelectProps={{\r\n                inputProps: {\r\n                  \"aria-label\": \"rows per page\",\r\n                },\r\n                native: true,\r\n              }}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default PlayerTable;\r\n","import React from \"react\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport IntlMessages from \"@crema/utility/IntlMessages\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { Fonts } from \"../../../shared/constants/AppEnums\";\r\nimport Switch from '@mui/material/Switch';\r\nconst label = { inputProps: { 'aria-label': 'Switch demo' } };\r\nconst Table = () => {\r\n  return (\r\n    <TableRow\r\n      sx={{\r\n        \"& th\": {\r\n          fontSize: 15,\r\n          padding: 4,\r\n          bgcolor: \"white\",\r\n\r\n          //   alignItems:\"center\",\r\n          //   justifyContent:\"center\", \r\n          fontWeight: Fonts.BOLD,\r\n\r\n          \"&:first-of-type\": {\r\n            pl: 10,\r\n          },\r\n          \"&:last-of-type\": {\r\n            pr: 10,\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <TableCell align=\"center\" className=\"tableCell\">\r\n        <IntlMessages id=\"Notification.table.UserName\" />\r\n      </TableCell>\r\n      <TableCell align=\"center\" className=\"tableCell\">\r\n        <IntlMessages id=\"Notification.table.Service\" />\r\n      </TableCell>\r\n\r\n      <TableCell align=\"center\" className=\"tableCell\">\r\n        <IntlMessages id=\"Notification.table.Action\" />\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport React, { FC } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport IntlMessages from \"@crema/utility/IntlMessages\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport { Grid, TableBody, TextField, Card } from \"@mui/material\";\r\nimport Table from \"./tableItem\";\r\n// import TableHeading from \"pages/Users/LeaderBoardTable/TableHeading\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\n// import TableBody from \"@mui/material/TableBody\";\r\ninterface FuncProp {\r\n  className?: string;\r\n  show?: any;\r\n  onHide?: any;\r\n  onDelete?: any;\r\n  Header?: any;\r\n  size?: any;\r\n  scrollable?: any;\r\n  width?: number;\r\n  id?: any;\r\n  page?: any;\r\n  search?: any;\r\n  UserName?: any;\r\n  Service?: any;\r\n  Action?: any;\r\n}\r\n\r\nconst BasicModal: FC<FuncProp> = ({\r\n  show,\r\n  onHide,\r\n  onDelete,\r\n  UserName, Service, Action\r\n}) => {\r\n  const style = {\r\n    // position: \"absolute\" as \"absolute\",\r\n    // top: \"50%\",\r\n    // left: \"50%\",\r\n    // transform: \"translate(-50%, -50%)\",\r\n    // width: { lg: width, xs: 400 },\r\n    // bgcolor: \"white\",\r\n    // border: \"2px solid gray\",\r\n    // borderRadius: \"10px\",\r\n    // boxShadow: 24,\r\n    // p: 4,\r\n  };\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={show}\r\n        onClose={onHide}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n        sx={{\r\n          padding: 15,\r\n          mt: 25,\r\n          marginLeft: 135,\r\n          p: 4,\r\n        }}\r\n      >\r\n        <Grid item lg={6} sm={6} xs={9} mb={6} ml={2} >\r\n          <TableContainer >\r\n            <Box>\r\n              <Box\r\n                component=\"h2\"\r\n                sx={{\r\n                  color: \"text.primary\",\r\n                  // fontWeight: Fonts.BOLD,  \r\n                  mb: 6,\r\n                  fontSize: 22,\r\n                  display: { lg: \"inline-block\", xs: \"block\" },\r\n                  mt: 20,\r\n\r\n                }}\r\n              >\r\n              </Box>\r\n              <Grid item xs={12}\r\n              >\r\n\r\n                <Card sx={{ width: 364, paddingTop: 11 }}>\r\n                  <TableHead>\r\n                    <Table />\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    <TableRow\r\n                      sx={{\r\n                        bgcolor: \"white\",\r\n                        width: \"100%\",\r\n                        mt: 10,\r\n                      }}\r\n\r\n                    >\r\n                      <TableCell align=\"center\" className=\"tableCell\">\r\n                        {UserName ? UserName : \"Sunny\"}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\" className=\"tableCell\">\r\n                        {Service ? Service : \"092345678\"}\r\n                      </TableCell>\r\n                      <TableCell align=\"center\" className=\"tableCell\">\r\n                        {Action ? Action : \"098\"}\r\n                      </TableCell>\r\n\r\n                    </TableRow>\r\n\r\n                  </TableBody>\r\n                  <Box sx={{ mt: 10 }}>\r\n                    <Button variant=\"contained\" onClick={onHide} sx={{ ml: 70, mb: 5 }}>\r\n                      <IntlMessages id=\"common.close\" ></IntlMessages></Button>\r\n                  </Box>\r\n                </Card>\r\n\r\n\r\n              </Grid>\r\n            </Box>\r\n\r\n          </TableContainer>\r\n        </Grid>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default BasicModal;\r\n","import { FC, useState } from \"react\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AppTableContainer from \"../../@crema/core/AppTableContainer\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport { AppGridContainer } from \"../../@crema\";\r\nimport { Fonts } from \"../../shared/constants/AppEnums\";\r\nimport { Box, Grid, TextField } from \"@mui/material\";\r\nimport AppAnimate from \"../../@crema/core/AppAnimate\";\r\nimport IntlMessages from \"../../@crema/utility/IntlMessages\";\r\nimport PlayerTable from \"./LeaderBoardTable\";\r\nimport AppCard from \"@crema/core/AppCard\";\r\nimport { Button } from \"@mui/material\";\r\nimport \"./style.css\";\r\nimport { getUsersList, changeUsersActivePage } from \"../../redux/userManagement/actions\";\r\nimport images from \"../../assets/images/noData.png\";\r\nimport Profile from \"./Modal/Profile\"\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport RequestModal from './Modal/requestModal';\r\nconst User = () => {\r\n  const dispatch = useDispatch();\r\n  const userList = useSelector((state: any) => state.User);\r\n  const [search, setSearch] = useState<string>(\"\");\r\n  const [page, setPage] = useState<number>(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState<number>(10);\r\n  const [request, setRequest] = useState(false);\r\n  const handleClick = () => setRequest(false);\r\n  useEffect(() => {\r\n    if (search != undefined) {\r\n      dispatch(changeUsersActivePage(0));\r\n      dispatch(\r\n        getUsersList({\r\n          page: 1, limit: 5,\r\n          search: search,\r\n        })\r\n      )\r\n    }\r\n  }, [search])\r\n  useEffect(() => {\r\n    dispatch(\r\n      getUsersList({\r\n        page: 1, limit: 5,\r\n        search: \"\",\r\n        adminId: \"\",\r\n      })\r\n    )\r\n  }, [])\r\n  const top100Films = [\r\n    { label: 'developer' },\r\n    { label: 'plumber' },\r\n    { label: 'electrician'},\r\n    { label: 'designer'},\r\n  ];\r\n  const JobStatus = [\r\n    { label: 'Completed' },\r\n    { label: 'In Progress' },\r\n  ];\r\n  return (\r\n    <>\r\n      <AppAnimate animation=\"transition.slideUpIn\" delay={200}>\r\n        <Box>\r\n          <Box\r\n            component=\"h2\"\r\n            sx={{\r\n              color: \"text.primary\",\r\n              fontWeight: Fonts.BOLD,\r\n              mb: 6,\r\n              fontSize: 22,\r\n              display: \"inline-block\",\r\n            }}\r\n          >\r\n            <IntlMessages id=\"Users.jobHeading\" />\r\n            <Box\r\n              display=\"flex\"\r\n              flexDirection=\"row\"\r\n              alignItems=\"center\"\r\n              sx={{\r\n                position: \"absolute\",\r\n                right: 4,\r\n                top: 4,\r\n                color: \"gray\",\r\n              }}\r\n            >\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => setRequest(true)}\r\n              >\r\n                <IntlMessages id=\"job.table.button\" />\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n          <AppGridContainer>\r\n            <Grid item xs={12} md={12}>\r\n              <AppCard\r\n                contentStyle={{ px: 0 }}\r\n              >\r\n                <TextField\r\n                  sx={{ display: \"inline-block\", marginLeft: 6 }}\r\n                  placeholder=\"Search Text\"\r\n                  label=\"Search\"\r\n                  value={search}\r\n                  onChange={(event: any) => {\r\n                    setSearch(event.target.value);\r\n                  }}\r\n                />\r\n                <Autocomplete\r\n                  disablePortal\r\n                  id='combo-box-demo'\r\n                  options={top100Films}\r\n                  sx={{ width: 200, display: \"inline-block\", marginLeft: 6 }}\r\n                  renderInput={(params) => <TextField {...params} label='Job Category' />}\r\n                />\r\n                <Autocomplete\r\n                  disablePortal\r\n                  id='combo-box-demo'\r\n                  options={JobStatus}\r\n                  sx={{\r\n                    width: 200, display: \"inline-block\", marginLeft: 6\r\n                  }}\r\n                  renderInput={(params) => <TextField {...params} label='Job Status' />}\r\n                />\r\n                {userList &&\r\n                  userList?.Users?.users?.length > 0 && (\r\n                  <PlayerTable\r\n                    userTableData={\r\n                      userList &&\r\n                      userList.Users\r\n                    }\r\n                  />\r\n                )\r\n                  // : \r\n                  // <div\r\n                  //   style={{\r\n                  //     display: \"flex\",\r\n                  //     justifyContent: \"center\",\r\n                  //     alignItems: \"center\",\r\n                  //   }}\r\n                  // >\r\n                  //   <img src={images} alt={\"\"} />\r\n                  // </div>\r\n                }\r\n              </AppCard>\r\n            </Grid>\r\n          </AppGridContainer>\r\n        </Box>\r\n      </AppAnimate>\r\n      <RequestModal show={request} onHide={handleClick} />\r\n    </>\r\n  );\r\n};\r\nexport default User;\r\n","import Box from \"@mui/material/Box\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport React, { FC } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport IntlMessages from \"@crema/utility/IntlMessages\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\ninterface FuncProp {\r\n  className?: string;\r\n  show?: any;\r\n  onHide?: any;\r\n  onDelete?: any;\r\n  Header?: any;\r\n  size?: any;\r\n  scrollable?: any;\r\n  width?: number;\r\n  id?: any;\r\n  page?: any;\r\n  search?: any;\r\n  \r\n}\r\nconst BasicModal: FC<FuncProp> = ({\r\n  show,\r\n  onHide,\r\n  onDelete,\r\n  children,\r\n  width,\r\n  className,\r\n  Header,\r\n  size,\r\n  scrollable,\r\n  id,\r\n  page,\r\n  search,\r\n}) => {\r\n  const style = {\r\n    position: \"absolute\" as \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: { lg: width, xs: 400 },\r\n    bgcolor: \"background.paper\",\r\n    border: \"2px solid gray\",\r\n    borderRadius: \"10px\",\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={show}\r\n        onClose={onHide}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        \r\n        <Box\r\n          sx={{\r\n            position: \"absolute\" as \"absolute\",\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            // width: { lg: 400, xs: 400 },\r\n            bgcolor: \"white\",\r\n            border: \"2px solid gray\",\r\n            borderRadius: \"10px\",\r\n            boxShadow: 24,\r\n            p: 4,\r\n          }}\r\n        \r\n        >\r\n          <Box sx={{ p: 4, color: \"blue\" }}>\r\n            <IntlMessages id=\"delAdmin.deleteAdmin\" />\r\n          </Box>\r\n          <Box display=\"flex\" sx={{ padding: 1, ml: 40, p: 4 }}>\r\n            <Button variant=\"contained\"\r\n              onClick={() => {\r\n                onHide()\r\n                onDelete()\r\n              }}\r\n            >\r\n              <IntlMessages id=\"common.delete\" />\r\n            </Button>\r\n            <Button variant=\"contained\" onClick={onHide} sx={{ ml: 4 }}>\r\n              <IntlMessages id=\"common.cancel\" />\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nexport default BasicModal;\r\n"],"sourceRoot":""}