{"version":3,"sources":["pages/auth/ForgetPassword/ForgetPage.tsx","pages/auth/ForgetPassword/index.tsx","pages/auth/AuthWrapper.tsx"],"names":["ForgetPage","useHistory","dispatch","useDispatch","ForgetSchema","Yup","shape","email","required","forgetFormik","useFormik","initialValues","validationSchema","onSubmit","values","a","resetForm","forgotPassword","AuthWrapper","Box","sx","width","mb","xs","xl","display","alignItems","Typography","component","fontWeight","Fonts","BOLD","fontSize","variant","color","theme","palette","text","primary","SEMI_BOLD","IntlMessages","id","pt","style","marginRight","MEDIUM","main","textDecoration","to","flex","flexDirection","textAlign","noValidate","autoComplete","handleSubmit","TextField","name","fullWidth","type","placeholder","label","value","onChange","e","setFieldValue","target","touched","errors","marginTop","Button","minWidth","REGULAR","textTransform","padding","AppInfoView","ForgetPassword","children","justifyContent","alignSelf"],"mappings":"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","file":"static/js/15.8405b7c5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppInfoView from \"@crema/core/AppInfoView\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Fonts } from \"../../../shared/constants/AppEnums\";\r\nimport AuthWrapper from \"../AuthWrapper\";\r\nimport { TextField } from \"@mui/material\";\r\nimport {forgotPassword} from \"../../../redux/auth/actions\"\r\nimport IntlMessages from \"@crema/utility/IntlMessages\";\r\nconst ForgetPage = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const ForgetSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .email(\"Email must be a valid email address\")\r\n      .required(\"Email is required\"),\r\n  });\r\n\r\n  const forgetFormik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n    },\r\n    validationSchema: ForgetSchema,\r\n    onSubmit: async (values , {resetForm}) => {\r\n   \r\n      await dispatch(\r\n        forgotPassword({\r\n          email: values.email,\r\n        })\r\n      );resetForm();\r\n    },\r\n  });\r\n  return (\r\n    <AuthWrapper>\r\n      <Box sx={{ width: \"70%\" }}>\r\n        <Box sx={{ mb: { xs: 8, xl: 10 } }}>\r\n          <Box\r\n            sx={{\r\n              mb: 5,\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Typography\r\n              component=\"h2\"\r\n              sx={{\r\n                fontWeight: Fonts.BOLD,\r\n                fontSize: 30,\r\n                mb: 4,\r\n              }}\r\n            >\r\n               {/* <IntlMessages id=\"common.Admin\" /> */}\r\n            </Typography>\r\n          </Box>\r\n          <Typography\r\n            variant=\"h2\"\r\n            component=\"h2\"\r\n            sx={{\r\n              mb: 1.5,\r\n              color: (theme) => theme.palette.text.primary,\r\n              fontWeight: Fonts.SEMI_BOLD,\r\n              fontSize: { xs: 14, xl: 16 },\r\n            }}\r\n          >\r\n             <IntlMessages id=\"common.Forget\" />\r\n          </Typography>\r\n\r\n          <Typography\r\n            sx={{\r\n              pt: 3,\r\n              fontSize: 15,\r\n              color: \"grey.500\",\r\n            }}\r\n          >\r\n            <span style={{ marginRight: 4 }}><IntlMessages id=\"common.password\" /></span>\r\n            <Box\r\n              component=\"span\"\r\n              sx={{\r\n                fontWeight: Fonts.MEDIUM,\r\n                \"& a\": {\r\n                  color: (theme) => theme.palette.primary.main,\r\n                  textDecoration: \"none\",\r\n                },\r\n              }}\r\n            >\r\n              <Link to=\"/signin\"><IntlMessages id=\"common.Signin\" /></Link>\r\n            </Box>\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box sx={{ flex: 1, display: \"flex\", flexDirection: \"column\" }}>\r\n          <Box sx={{ flex: 1, display: \"flex\", flexDirection: \"column\" }}>\r\n            <form\r\n              style={{ textAlign: \"left\" }}\r\n              noValidate\r\n              autoComplete=\"off\"\r\n              onSubmit={forgetFormik.handleSubmit}\r\n            >\r\n              <Box sx={{ mb: { xs: 5, xl: 8 } }}>\r\n                <TextField\r\n                  name=\"email\"\r\n                  fullWidth\r\n                  type=\"email\"\r\n                  placeholder=\"name@email.com\"\r\n                  label=\"Email\"\r\n                  value={forgetFormik.values.email}\r\n                  onChange={(e: any) => {\r\n                    forgetFormik.setFieldValue(\"email\", e.target.value);\r\n                  }}\r\n                />\r\n                {forgetFormik.touched.email && forgetFormik.errors.email ? (\r\n                  <div style={{ color: \"red\" }}>\r\n                    {forgetFormik.errors.email}\r\n                  </div>\r\n                ) : null}\r\n              </Box>\r\n\r\n              <div style={{ textAlign: \"center\", marginTop: \"30px\" }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  // disabled={isSubmitting}\r\n                  sx={{\r\n                    minWidth: 160,\r\n                    fontWeight: Fonts.REGULAR,\r\n                    fontSize: 16,\r\n                    textTransform: \"capitalize\",\r\n                    padding: \"4px 16px 8px\",\r\n                  }}\r\n                >\r\n                  Send Password\r\n                </Button>\r\n              </div>\r\n            </form>\r\n\r\n            {/* <Formik\r\n              validateOnChange={true}\r\n              initialValues={{\r\n                email: \"\",\r\n              }}\r\n              validationSchema={validationSchema}\r\n              onSubmit={(data, { setSubmitting, resetForm }) => {\r\n                setSubmitting(true);\r\n                //reset password api goes here\r\n                setSubmitting(false);\r\n                resetForm();\r\n              }}\r\n            >\r\n              {({ isSubmitting }) => (\r\n                <Form style={{ textAlign: \"left\" }}>\r\n                  <Box sx={{ mb: { xs: 5, lg: 8 } }}>\r\n                    <AppTextField\r\n                      placeholder=\"Email\"\r\n                      name=\"email\"\r\n                      label={<IntlMessages id=\"common.emailAddress\" />}\r\n                      sx={{\r\n                        width: \"100%\",\r\n                        \"& .MuiInputBase-input\": {\r\n                          fontSize: 14,\r\n                        },\r\n                      }}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Box>\r\n\r\n                  <div>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      disabled={isSubmitting}\r\n                      sx={{\r\n                        fontWeight: Fonts.REGULAR,\r\n                        textTransform: \"capitalize\",\r\n                        fontSize: 16,\r\n                        minWidth: 160,\r\n                      }}\r\n                      type=\"submit\"\r\n                    >\r\n                      <IntlMessages id=\"common.sendNewPassword\" />\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              )}\r\n            </Formik> */}\r\n          </Box>\r\n\r\n          <AppInfoView />\r\n        </Box>\r\n      </Box>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default ForgetPage;\r\n","import React from \"react\";\r\nimport ForgetPage from \"./ForgetPage\"\r\n\r\nconst ForgetPassword = () => {\r\n  return <ForgetPage />;\r\n};\r\n\r\nexport default ForgetPassword;\r\n","import React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { Fonts } from \"../../shared/constants/AppEnums\";\r\nimport IntlMessages from \"@crema/utility/IntlMessages\";\r\ninterface AuthWrapperProps {\r\n  children: any;\r\n}\r\n\r\nconst AuthWrapper: React.FC<AuthWrapperProps> = ({ children }) => {\r\n  return (\r\n    <Card sx={{width:\"30%\",\r\n    flex: 1,\r\n    display: \"flex\",\r\n    // flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignSelf:\"center\" ,\r\n     \r\n    }}>\r\n    <Box\r\n      sx={{\r\n        flex: 1,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n        {/* <Box\r\n          sx={{\r\n            width: { xs: \"100%\", sm: \"50%\", lg: \"40%\" },\r\n            padding: { xs: 5, lg: 10 },\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        > */}\r\n          {children}\r\n        </Box>\r\n        {/* <Box\r\n          sx={{\r\n            width: { xs: \"100%\", sm: \"50%\", lg: \"60%\" },\r\n            position: \"relative\",\r\n            padding: { xs: 5, lg: 10 },\r\n            display: { xs: \"none\", sm: \"flex\" },\r\n            alignItems: { sm: \"center\" },\r\n            justifyContent: { sm: \"center\" },\r\n            flexDirection: { sm: \"column\" },\r\n            backgroundColor: (theme) => theme.palette.grey[900],\r\n            color: (theme) => theme.palette.common.white,\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              maxWidth: 320,\r\n            }}\r\n          >\r\n            <Typography\r\n              component=\"h2\"\r\n              sx={{\r\n                fontWeight: Fonts.BOLD,\r\n                fontSize: 30,\r\n                mb: 4,\r\n              }}\r\n            >\r\n             <IntlMessages id=\"common.Welcome\" />\r\n            </Typography>\r\n            <Typography>\r\n            <IntlMessages id=\"common.Description\" />\r\n            </Typography>\r\n          </Box>\r\n        </Box> */}\r\n      {/* </Card> */}\r\n     {/* </Box>  */}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AuthWrapper;\r\n"],"sourceRoot":""}