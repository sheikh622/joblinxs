{"version":3,"sources":["pages/auth/Signin/Login.tsx","pages/auth/Signin/index.tsx","pages/auth/AuthWrapper.tsx"],"names":["LoginPage","history","useHistory","dispatch","useDispatch","useState","showPassword","setShowPassword","LoginSchema","Yup","shape","email","required","password","loginFormik","useFormik","initialValues","remember","validationSchema","onSubmit","values","a","loginRequest","Box","sx","flex","display","flexDirection","mb","style","textAlign","noValidate","autoComplete","handleSubmit","xs","xl","TextField","name","fullWidth","type","placeholder","label","value","onChange","e","setFieldValue","target","touched","errors","color","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","edge","icon","component","theme","palette","primary","main","fontWeight","Fonts","MEDIUM","cursor","push","tab","marginTop","Button","variant","minWidth","REGULAR","fontSize","textTransform","padding","AppInfoView","Signin","AuthWrapper","width","alignItems","Typography","BOLD","Login","children","justifyContent","maxWidth","minHeight","sm","overflow","lg","backgroundColor","grey","common","white"],"mappings":"yRAwJeA,EA3IG,WAChB,IAAMC,EAAUC,cACVC,EAAWC,cACjB,EAAwCC,mBAAS,QAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAaMC,EAAcC,MAAaC,MAAM,CACrCC,MAAOF,MACJE,MAAM,uCACNC,SAAS,qBACZC,SAAUJ,MAAaG,SAAS,0BAG5BE,EAAcC,YAAU,CAC5BC,cAAe,CACbL,MAAO,GACPE,SAAU,GACVI,UAAU,GAEZC,iBAAkBV,EAClBW,SAAS,WAAD,4BAAE,WAAOC,GAAP,SAAAC,EAAA,sEACFlB,EACJmB,YAAa,CACXX,MAAOS,EAAOT,MACdE,SAAUO,EAAOP,YAJb,2CAAF,mDAAC,KAUX,OACE,eAACU,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,QAAS,OAAQC,cAAe,UAApD,UACE,cAACJ,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,QAAS,OAAQC,cAAe,SAAUC,GAAI,GAAlE,SACE,uBACEC,MAAO,CAAEC,UAAW,QACpBC,YAAU,EACVC,aAAa,MACbb,SAAUL,EAAYmB,aAJxB,UAME,eAACV,EAAA,EAAD,CAAKC,GAAI,CAAEI,GAAI,CAAEM,GAAI,EAAGC,GAAI,IAA5B,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,WAAS,EACTC,KAAK,QACLC,YAAY,iBACZC,MAAM,QACNC,MAAO5B,EAAYM,OAAOT,MAC1BgC,SAAU,SAACC,GACT9B,EAAY+B,cAAc,QAASD,EAAEE,OAAOJ,UAG/C5B,EAAYiC,QAAQpC,OAASG,EAAYkC,OAAOrC,MAC/C,qBAAKkB,MAAO,CAAEoB,MAAO,OAArB,SAA+BnC,EAAYkC,OAAOrC,QAChD,QAGN,eAACY,EAAA,EAAD,CAAKC,GAAI,CAAEI,GAAI,CAAEM,GAAI,EAAGC,GAAI,IAA5B,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,WACLC,WAAS,EACTC,KAAMjC,EACNkC,YAAY,WACZC,MAAM,WACNC,MAAO5B,EAAYM,OAAOP,SAC1B8B,SAAU,SAACC,GACT9B,EAAY+B,cAAc,WAAYD,EAAEE,OAAOJ,QAEjDQ,WAAY,CACVC,aACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SACE,cAACC,EAAA,EAAD,CAAYC,QA5EF,WAExBhD,EADmB,aAAjBD,EACc,OAEA,aAwEwCkD,KAAK,MAA/C,SACE,cAAC,IAAD,CACEC,KAAsB,QAAhBnD,EAAyB,eAAiB,4BAO3DQ,EAAYiC,QAAQlC,UAAYC,EAAYkC,OAAOnC,SAClD,qBAAKgB,MAAO,CAAEoB,MAAO,OAArB,SAA+BnC,EAAYkC,OAAOnC,WAChD,QAGN,cAACU,EAAA,EAAD,CACEC,GAAI,CACFI,GAAI,CAAEM,GAAI,EAAGC,GAAI,IAFrB,SAKE,cAACZ,EAAA,EAAD,CACEmC,UAAU,OACVlC,GAAI,CACFyB,MAAO,SAACU,GAAD,OAAWA,EAAMC,QAAQC,QAAQC,MACxCC,WAAYC,IAAMC,OAClBC,OAAQ,UACRxC,QAAS,QACTI,UAAW,SAEbyB,QAhGiB,WAC3BtD,EAAQkE,KAAK,mBAAoB,CAAEC,IAAK,cAsFhC,qCAeF,qBAAKvC,MAAO,CAAEC,UAAW,SAAUuC,UAAW,QAA9C,SACE,cAACC,EAAA,EAAD,CACEC,QAAQ,YACRtB,MAAM,UACNV,KAAK,SAELf,GAAI,CACFgD,SAAU,IACVT,WAAYC,IAAMS,QAClBC,SAAU,GACVC,cAAe,aACfC,QAAS,gBAVb,0BAmBN,cAACC,EAAA,EAAD,Q,SCvGSC,UAnCA,WACG5E,cAEhB,OACE,cAAC6E,EAAA,EAAD,UACE,eAACxD,EAAA,EAAD,CAAKC,GAAI,CAAEwD,MAAO,QAAlB,UACE,cAACzD,EAAA,EAAD,CAAKC,GAAI,CAAEI,GAAI,CAAEM,GAAI,EAAGC,GAAI,IAA5B,SACE,cAACZ,EAAA,EAAD,CACEC,GAAI,CACFI,GAAI,EACJF,QAAS,OACTuD,WAAY,UAJhB,SAOE,cAACC,EAAA,EAAD,CACExB,UAAU,KACVlC,GAAI,CACFuC,WAAYC,IAAMmB,KAClBT,SAAU,GACV9C,GAAI,GALR,iCAeJ,cAACwD,EAAD,W,iCCtCR,mDAmFeL,IAzEiC,SAAC,GAAkB,IAAhBM,EAAe,EAAfA,SACjD,OACE,cAAC,IAAD,CACE7D,GAAI,CACFC,KAAM,EACNC,QAAS,OACTC,cAAe,SACf2D,eAAgB,SAChBL,WAAY,UANhB,SASE,eAAC,IAAD,CACEzD,GAAI,CACF+D,SAAU,IACVC,UAAW,CAAEtD,GAAI,IAAKuD,GAAI,KAC1BT,MAAO,OACPU,SAAU,SACVrC,SAAU,WACV3B,QAAS,QAPb,UAUE,cAAC,IAAD,CACEF,GAAI,CACFwD,MAAO,CAAE9C,GAAI,OAAQuD,GAAI,MAAOE,GAAI,OACpCf,QAAS,CAAE1C,GAAI,EAAGyD,GAAI,IACtBjE,QAAS,OACTC,cAAe,SACf2D,eAAgB,UANpB,SASGD,IAEH,cAAC,IAAD,CACE7D,GAAI,CACFwD,MAAO,CAAE9C,GAAI,OAAQuD,GAAI,MAAOE,GAAI,OACpCtC,SAAU,WACVuB,QAAS,CAAE1C,GAAI,EAAGyD,GAAI,IACtBjE,QAAS,CAAEQ,GAAI,OAAQuD,GAAI,QAC3BR,WAAY,CAAEQ,GAAI,UAClBH,eAAgB,CAAEG,GAAI,UACtB9D,cAAe,CAAE8D,GAAI,UACrBG,gBAAiB,SAACjC,GAAD,OAAWA,EAAMC,QAAQiC,KAAK,MAC/C5C,MAAO,SAACU,GAAD,OAAWA,EAAMC,QAAQkC,OAAOC,OACvCrB,SAAU,IAXd,SAcE,eAAC,IAAD,CACElD,GAAI,CACF+D,SAAU,KAFd,UAKE,cAAC,IAAD,CACE7B,UAAU,KACVlC,GAAI,CACFuC,WAAYC,IAAMmB,KAClBT,SAAU,GACV9C,GAAI,GALR,qCAUA,cAAC,IAAD","file":"static/js/23.4c751697.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport AppInfoView from \"../../../@crema/core/AppInfoView\";\r\nimport { Fonts } from \"../../../shared/constants/AppEnums\";\r\nimport { TextField } from \"@mui/material\";\r\nimport { loginRequest } from \"../../../redux/auth/actions\";\r\nimport { InputAdornment, IconButton } from \"@mui/material\";\r\nimport { Icon } from \"@iconify/react\";\r\nconst LoginPage = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [showPassword, setShowPassword] = useState(\"text\");\r\n  const changePasswordState = () => {\r\n    if (showPassword === \"password\") {\r\n      setShowPassword(\"text\");\r\n    } else {\r\n      setShowPassword(\"password\");\r\n    }\r\n  };\r\n\r\n  const onGoToForgetPassword = () => {\r\n    history.push(\"/forget-password\", { tab: \"firebase\" });\r\n  };\r\n\r\n  const LoginSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .email(\"Email must be a valid email address\")\r\n      .required(\"Email is required\"),\r\n    password: Yup.string().required(\"Password is required\"),\r\n  });\r\n\r\n  const loginFormik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n      remember: true,\r\n    },\r\n    validationSchema: LoginSchema,\r\n    onSubmit: async (values) => {\r\n      await dispatch(\r\n        loginRequest({\r\n          email: values.email,\r\n          password: values.password,\r\n        })\r\n      );\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Box sx={{ flex: 1, display: \"flex\", flexDirection: \"column\" }}>\r\n      <Box sx={{ flex: 1, display: \"flex\", flexDirection: \"column\", mb: 5 }}>\r\n        <form\r\n          style={{ textAlign: \"left\" }}\r\n          noValidate\r\n          autoComplete=\"off\"\r\n          onSubmit={loginFormik.handleSubmit}\r\n        >\r\n          <Box sx={{ mb: { xs: 5, xl: 8 } }}>\r\n            <TextField\r\n              name=\"email\"\r\n              fullWidth\r\n              type=\"email\"\r\n              placeholder=\"name@email.com\"\r\n              label=\"Email\"\r\n              value={loginFormik.values.email}\r\n              onChange={(e: any) => {\r\n                loginFormik.setFieldValue(\"email\", e.target.value);\r\n              }}\r\n            />\r\n            {loginFormik.touched.email && loginFormik.errors.email ? (\r\n              <div style={{ color: \"red\" }}>{loginFormik.errors.email}</div>\r\n            ) : null}\r\n          </Box>\r\n\r\n          <Box sx={{ mb: { xs: 3, xl: 4 } }}>\r\n            <TextField\r\n              name=\"password\"\r\n              fullWidth\r\n              type={showPassword}\r\n              placeholder=\"password\"\r\n              label=\"Password\"\r\n              value={loginFormik.values.password}\r\n              onChange={(e: any) => {\r\n                loginFormik.setFieldValue(\"password\", e.target.value);\r\n              }}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton onClick={changePasswordState} edge=\"end\">\r\n                      <Icon\r\n                        icon={showPassword == \"text\" ? \"eva:eye-fill\" : \"eva:eye-off-fill\"}\r\n                      />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            {loginFormik.touched.password && loginFormik.errors.password ? (\r\n              <div style={{ color: \"red\" }}>{loginFormik.errors.password}</div>\r\n            ) : null}\r\n          </Box>\r\n\r\n          <Box\r\n            sx={{\r\n              mb: { xs: 3, xl: 4 },\r\n            }}\r\n          >\r\n            <Box\r\n              component=\"span\"\r\n              sx={{\r\n                color: (theme) => theme.palette.primary.main,\r\n                fontWeight: Fonts.MEDIUM,\r\n                cursor: \"pointer\",\r\n                display: \"block\",\r\n                textAlign: \"right\",\r\n              }}\r\n              onClick={onGoToForgetPassword}\r\n            >\r\n              Forget Your Password?\r\n            </Box>\r\n          </Box>\r\n\r\n          <div style={{ textAlign: \"center\", marginTop: \"30px\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              // disabled={isSubmitting}\r\n              sx={{\r\n                minWidth: 160,\r\n                fontWeight: Fonts.REGULAR,\r\n                fontSize: 16,\r\n                textTransform: \"capitalize\",\r\n                padding: \"4px 16px 8px\",\r\n              }}\r\n            >\r\n              Login\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Box>\r\n\r\n      <AppInfoView />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport AuthWrapper from \"../AuthWrapper\";\r\nimport LoginPage from \"./Login\";\r\nimport AppLogo from \"@crema/core/AppLayout/components/AppLogo\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { Fonts } from \"../../../shared/constants/AppEnums\";\r\n\r\nconst Signin = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <AuthWrapper>\r\n      <Box sx={{ width: \"100%\" }}>\r\n        <Box sx={{ mb: { xs: 6, xl: 8 } }}>\r\n          <Box\r\n            sx={{\r\n              mb: 5,\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Typography\r\n              component=\"h2\"\r\n              sx={{\r\n                fontWeight: Fonts.BOLD,\r\n                fontSize: 30,\r\n                mb: 4,\r\n              }}\r\n            >\r\n              NFT Battle Game\r\n            </Typography>\r\n\r\n            {/* <AppLogo /> */}\r\n          </Box>\r\n        </Box>\r\n\r\n        <LoginPage />\r\n      </Box>\r\n    </AuthWrapper>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { Fonts } from \"../../shared/constants/AppEnums\";\r\n\r\ninterface AuthWrapperProps {\r\n  children: any;\r\n}\r\n\r\nconst AuthWrapper: React.FC<AuthWrapperProps> = ({ children }) => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        flex: 1,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Card\r\n        sx={{\r\n          maxWidth: 900,\r\n          minHeight: { xs: 320, sm: 450 },\r\n          width: \"100%\",\r\n          overflow: \"hidden\",\r\n          position: \"relative\",\r\n          display: \"flex\",\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            width: { xs: \"100%\", sm: \"50%\", lg: \"40%\" },\r\n            padding: { xs: 5, lg: 10 },\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {children}\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            width: { xs: \"100%\", sm: \"50%\", lg: \"60%\" },\r\n            position: \"relative\",\r\n            padding: { xs: 5, lg: 10 },\r\n            display: { xs: \"none\", sm: \"flex\" },\r\n            alignItems: { sm: \"center\" },\r\n            justifyContent: { sm: \"center\" },\r\n            flexDirection: { sm: \"column\" },\r\n            backgroundColor: (theme) => theme.palette.grey[900],\r\n            color: (theme) => theme.palette.common.white,\r\n            fontSize: 14,\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              maxWidth: 320,\r\n            }}\r\n          >\r\n            <Typography\r\n              component=\"h2\"\r\n              sx={{\r\n                fontWeight: Fonts.BOLD,\r\n                fontSize: 30,\r\n                mb: 4,\r\n              }}\r\n            >\r\n              Welcome to Admin Panel!\r\n            </Typography>\r\n            <Typography>\r\n              NFT battle game tool is a play-to-earn system that works on the\r\n              Ethereum Blockchain network. Holders who own NFTs registered to\r\n              this game tool could play this game and earn ERC20 tokens.\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AuthWrapper;\r\n"],"sourceRoot":""}